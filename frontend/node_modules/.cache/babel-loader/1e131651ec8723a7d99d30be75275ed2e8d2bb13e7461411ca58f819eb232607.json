{"ast":null,"code":"var _jsxFileName = \"E:\\\\semester 6\\\\AI\\\\plant-disease-prediction\\\\frontend\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { message, Upload } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Dragger\n} = Upload;\nconst props = {\n  name: 'file',\n  multiple: true,\n  action: 'https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload',\n  onChange(info) {\n    const {\n      status\n    } = info.file;\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      message.success(`${info.file.name} file uploaded successfully.`);\n    } else if (status === 'error') {\n      message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n  onDrop(e) {\n    console.log('Dropped files', e.dataTransfer.files);\n  }\n};\nconst FileUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [prediction, setPrediction] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!file) {\n      setError(\"Please upload a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      setLoading(true);\n      const response = await axios.post('http://127.0.0.1:5000/predict', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setPrediction(response.data.predicted_class);\n    } catch (err) {\n      setError(\"An error occurred while making the prediction.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Plant Disease Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dragger, {\n      ...props,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-text\",\n        children: \"Click or drag file to this area to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-hint\",\n        children: \"Support for a single or bulk upload. Strictly prohibited from uploading company data or other banned files.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload and Predict\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this), prediction !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Predicted Class: \", prediction]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"r1rFxaxBZ5gDqBqc+CjnpgilQzQ=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","InboxOutlined","message","Upload","axios","jsxDEV","_jsxDEV","Dragger","props","name","multiple","action","onChange","info","status","file","console","log","fileList","success","error","onDrop","e","dataTransfer","files","FileUpload","_s","setFile","prediction","setPrediction","loading","setLoading","setError","handleFileChange","target","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","predicted_class","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","style","color","_c","$RefreshReg$"],"sources":["E:/semester 6/AI/plant-disease-prediction/frontend/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { InboxOutlined } from '@ant-design/icons';\r\nimport { message, Upload } from 'antd';\r\n\r\nimport axios from 'axios';\r\nconst { Dragger } = Upload;\r\n\r\nconst props = {\r\n    name: 'file',\r\n    multiple: true,\r\n    action: 'https://660d2bd96ddfa2943b33731c.mockapi.io/api/upload',\r\n    onChange(info) {\r\n      const { status } = info.file;\r\n      if (status !== 'uploading') {\r\n        console.log(info.file, info.fileList);\r\n      }\r\n      if (status === 'done') {\r\n        message.success(`${info.file.name} file uploaded successfully.`);\r\n      } else if (status === 'error') {\r\n        message.error(`${info.file.name} file upload failed.`);\r\n      }\r\n    },\r\n    onDrop(e) {\r\n      console.log('Dropped files', e.dataTransfer.files);\r\n    },\r\n  };\r\nconst FileUpload = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [prediction, setPrediction] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!file) {\r\n            setError(\"Please upload a file first.\");\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n\r\n        try {\r\n            setLoading(true);\r\n            const response = await axios.post('http://127.0.0.1:5000/predict', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n            setPrediction(response.data.predicted_class);\r\n        } catch (err) {\r\n            setError(\"An error occurred while making the prediction.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Plant Disease Prediction</h1>\r\n            <Dragger {...props}>\r\n                <p className=\"ant-upload-drag-icon\">\r\n                <InboxOutlined />\r\n                </p>\r\n                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\r\n                <p className=\"ant-upload-hint\">\r\n                Support for a single or bulk upload. Strictly prohibited from uploading company data or other\r\n                banned files.\r\n                </p>\r\n            </Dragger>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"file\" onChange={handleFileChange} />\r\n                <button type=\"submit\">Upload and Predict</button>\r\n            </form>\r\n            {loading && <p>Loading...</p>}\r\n            {error && <p style={{color: 'red'}}>{error}</p>}\r\n            {prediction !== null && <p>Predicted Class: {prediction}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}